{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isStarted","setStart","isReversed","setReversed","NONE","sortType","setSortType","visibleGoods","goods","sort","good1","good2","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","prevState","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,oDAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,mBAAAA,E,iBAAAA,M,KAiCE,IAAME,EAAgB,WAC3B,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAASH,EAASQ,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAhCR,SACEC,EACAH,EACAH,GAEA,IAAMK,EAAY,YAAOC,GAmBzB,OAjBAD,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAQN,GACN,KAAKT,EAASgB,QACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKf,EAASkB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAITb,GACFK,EAAaS,UAGRT,EAQcU,CACnBpB,EACAQ,EACAH,GAGF,OACE,qBAAKgB,UAAU,MAAf,SACIlB,EASA,qCACE,sBAAKkB,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMd,EAAYV,EAASgB,UACpCM,UAAU,0BAHZ,iCAQA,wBACEC,KAAK,SACLC,QAAS,kBAAMd,EAAYV,EAASkB,SACpCI,UAAU,0BAHZ,4BAQA,wBACEC,KAAK,SACLC,QAAS,kBAAMjB,GAAY,SAAAkB,GAAS,OAAKA,MACzCH,UAAU,0BAHZ,qBAQA,wBACEC,KAAK,SACLC,QAAS,WACPd,EAAYV,EAASQ,MACrBD,GAAY,IAEde,UAAU,0BANZ,sBAYF,oBAAIA,UAAU,8BAAd,SACGX,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAIL,UAAU,4BAAd,SACGK,GAD4CA,WAhDrD,wBACEJ,KAAK,SACLC,QAAS,kBAAMnB,GAAS,IACxBiB,UAAU,kBAHZ,sBC7DRM,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b3641b52.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'None',\n  ALPABET = 'Alphabet',\n  LENGTH = 'length',\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isStarted, setStart] = useState(false);\n  const [isReversed, setReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer,\n    sortType,\n    isReversed,\n  );\n\n  return (\n    <div className=\"App\">\n      {!isStarted ? (\n        <button\n          type=\"button\"\n          onClick={() => setStart(true)}\n          className=\"btn btn-primary\"\n        >\n          Start\n        </button>\n      ) : (\n        <>\n          <div className=\"buttons\">\n            <button\n              type=\"button\"\n              onClick={() => setSortType(SortType.ALPABET)}\n              className=\"btn btn-outline-primary\"\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => setSortType(SortType.LENGTH)}\n              className=\"btn btn-outline-primary\"\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => setReversed(prevState => !prevState)}\n              className=\"btn btn-outline-primary\"\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => {\n                setSortType(SortType.NONE);\n                setReversed(false);\n              }}\n              className=\"btn btn-outline-primary\"\n            >\n              Reset\n            </button>\n          </div>\n\n          <ul className=\"list-group list-group-flush\">\n            {visibleGoods.map(good => (\n              <li className=\"list-item list-group-item\" key={good}>\n                {good}\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}